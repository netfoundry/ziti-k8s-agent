---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: zitiwebhooks.kubernetes.openziti.io
spec:
  group: kubernetes.openziti.io
  names:
    kind: ZitiWebhook
    listKind: ZitiWebhookList
    plural: zitiwebhooks
    singular: zitiwebhook
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The number of desired replicas
      jsonPath: .spec.deploymentSpec.replicas
      name: Replicas
      type: integer
    - description: The number of ready replicas
      jsonPath: .status.replicas
      name: Ready
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ZitiWebhook is the Schema for the zitiwebhooks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ZitiWebhookSpec defines the desired state of ZitiWebhook
            properties:
              cert:
                description: Webhook Certificate
                properties:
                  duration:
                    default: 2160
                    description: Cert Duration
                    format: int64
                    type: integer
                  organization:
                    default:
                    - NetFoundry
                    description: Cert Organization
                    items:
                      type: string
                    type: array
                  renewBefore:
                    default: 360
                    description: Cert Renew Before
                    format: int64
                    type: integer
                type: object
              clusterRoleSpec:
                description: Cluster Role Specs
                properties:
                  rules:
                    default:
                    - apiGroups:
                      - ""
                      resources:
                      - services
                      - namespaces
                      verbs:
                      - get
                      - list
                      - watch
                    - apiGroups:
                      - ""
                      resources:
                      - persistentvolumeclaims
                      verbs:
                      - get
                      - delete
                    description: Cluster Role Rules
                    items:
                      description: |-
                        PolicyRule holds information that describes a policy rule, but does not contain information
                        about who the rule applies to or which namespace the rule applies to.
                      properties:
                        apiGroups:
                          description: |-
                            APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                            the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        nonResourceURLs:
                          description: |-
                            NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                            Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                            Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        resourceNames:
                          description: ResourceNames is an optional white list of
                            names that the rule applies to.  An empty set means that
                            everything is allowed.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        resources:
                          description: Resources is a list of resources this rule
                            applies to. '*' represents all resources.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        verbs:
                          description: Verbs is a list of Verbs that apply to ALL
                            the ResourceKinds contained in this rule. '*' represents
                            all verbs.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - verbs
                      type: object
                    minItems: 1
                    type: array
                type: object
              deploymentSpec:
                description: Deployment Specs
                properties:
                  env:
                    description: Environment Variables
                    properties:
                      clusterDnsServiceIP:
                        description: Cluster DNS Service IP
                        type: string
                      podSecurityOverride:
                        default: false
                        description: 'Override the security context at pod level,
                          i.e. runAsNonRoot: false'
                        type: boolean
                      searchDomainList:
                        description: A list of DNS search domains as space seperated
                          string i.e. 'value1 value2'
                        type: string
                      sidecarIdentityDir:
                        default: /ziti-tunnel
                        description: Directory where sidecar container will store
                          identity files
                        type: string
                      sidecarImage:
                        default: openziti/ziti-tunnel
                        description: Sidecar container image
                        type: string
                      sidecarImagePullPolicy:
                        default: IfNotPresent
                        description: Image pull policy for sidecar container
                        type: string
                      sidecarImageVersion:
                        default: latest
                        description: Sidecar container image version
                        type: string
                      sidecarPrefix:
                        default: zt
                        description: Used in creation of ContainerName to be used
                          as injected sidecar
                        type: string
                      zitiCtrlCaBundleFile:
                        description: Ziti Controller CA Bundle
                        type: string
                      zitiCtrlClientCertFile:
                        description: Ziti Controller Client Certificate
                        type: string
                      zitiCtrlClientKeyFile:
                        description: Ziti Controller Client Key
                        type: string
                      zitiCtrlMgmtApi:
                        default: ""
                        description: Ziti Controller Management URL, i.e. https://{FQDN}:{PORT}/edge/management/v1
                        type: string
                      zitiRoleKey:
                        default: identity.openziti.io/role-attributes
                        description: Ziti Identity Role Key used in pod annotation
                        type: string
                    type: object
                  image:
                    default: netfoundry/ziti-k8s-agent
                    description: Webhook Image
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: Weebhook Image Pull Policy
                    type: string
                  imageVersion:
                    default: latest
                    description: Webhook Image Version
                    type: string
                  logLevel:
                    default: 2
                    description: Log Verbose Level
                    format: int32
                    maximum: 5
                    minimum: 0
                    type: integer
                  maxSurge:
                    default: 25%
                    description: Max Surge
                    pattern: ^[0-9]+%$
                    type: string
                  maxUnavailable:
                    default: 25%
                    description: Max Unavailable
                    pattern: ^[0-9]+%$
                    type: string
                  port:
                    default: 9443
                    description: Secure port that the webhook listens on
                    format: int32
                    type: integer
                  progressDeadlineSeconds:
                    default: 600
                    description: Progress Deadline
                    format: int32
                    minimum: 0
                    type: integer
                  replicas:
                    default: 2
                    description: Number of replicas
                    format: int32
                    type: integer
                  resourceLimit:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    default:
                      cpu: 500m
                      memory: 512Mi
                    description: Resource Limit
                    type: object
                  resourceRequest:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    default:
                      cpu: 100m
                      memory: 128Mi
                    description: Resource Request
                    type: object
                  revisionHistoryLimit:
                    default: 10
                    description: Revision History Limit
                    format: int32
                    minimum: 0
                    type: integer
                  terminationGracePeriodSeconds:
                    default: 30
                    description: Termination Grace Period
                    format: int64
                    type: integer
                type: object
              mutatingWebhookSpec:
                description: Mutating Webhook Specs
                items:
                  description: MutatingWebhook describes an admission webhook and
                    the resources and operations it applies to.
                  properties:
                    admissionReviewVersions:
                      description: |-
                        AdmissionReviewVersions is an ordered list of preferred `AdmissionReview`
                        versions the Webhook expects. API server will try to use first version in
                        the list which it supports. If none of the versions specified in this list
                        supported by API server, validation will fail for this object.
                        If a persisted webhook configuration specifies allowed versions and does not
                        include any versions known to the API Server, calls to the webhook will fail
                        and be subject to the failure policy.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    clientConfig:
                      description: |-
                        ClientConfig defines how to communicate with the hook.
                        Required
                      properties:
                        caBundle:
                          description: |-
                            `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                            If unspecified, system trust roots on the apiserver are used.
                          format: byte
                          type: string
                        service:
                          description: |-
                            `service` is a reference to the service for this webhook. Either
                            `service` or `url` must be specified.

                            If the webhook is running within the cluster, then you should use `service`.
                          properties:
                            name:
                              description: |-
                                `name` is the name of the service.
                                Required
                              type: string
                            namespace:
                              description: |-
                                `namespace` is the namespace of the service.
                                Required
                              type: string
                            path:
                              description: |-
                                `path` is an optional URL path which will be sent in any request to
                                this service.
                              type: string
                            port:
                              description: |-
                                If specified, the port on the service that hosting webhook.
                                Default to 443 for backward compatibility.
                                `port` should be a valid port number (1-65535, inclusive).
                              format: int32
                              type: integer
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: |-
                            `url` gives the location of the webhook, in standard URL form
                            (`scheme://host:port/path`). Exactly one of `url` or `service`
                            must be specified.

                            The `host` should not refer to a service running in the cluster; use
                            the `service` field instead. The host might be resolved via external
                            DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                            in-cluster DNS as that would be a layering violation). `host` may
                            also be an IP address.

                            Please note that using `localhost` or `127.0.0.1` as a `host` is
                            risky unless you take great care to run this webhook on all hosts
                            which run an apiserver which might need to make calls to this
                            webhook. Such installs are likely to be non-portable, i.e., not easy
                            to turn up in a new cluster.

                            The scheme must be "https"; the URL must begin with "https://".

                            A path is optional, and if present may be any string permissible in
                            a URL. You may use the path to pass an arbitrary string to the
                            webhook, for example, a cluster identifier.

                            Attempting to use a user or basic auth e.g. "user:password@" is not
                            allowed. Fragments ("#...") and query parameters ("?...") are not
                            allowed, either.
                          type: string
                      type: object
                    failurePolicy:
                      description: |-
                        FailurePolicy defines how unrecognized errors from the admission endpoint are handled -
                        allowed values are Ignore or Fail. Defaults to Fail.
                      type: string
                    matchConditions:
                      description: |-
                        MatchConditions is a list of conditions that must be met for a request to be sent to this
                        webhook. Match conditions filter requests that have already been matched by the rules,
                        namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests.
                        There are a maximum of 64 match conditions allowed.

                        The exact matching logic is (in order):
                          1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
                          2. If ALL matchConditions evaluate to TRUE, the webhook is called.
                          3. If any matchCondition evaluates to an error (but none are FALSE):
                             - If failurePolicy=Fail, reject the request
                             - If failurePolicy=Ignore, the error is ignored and the webhook is skipped
                      items:
                        description: MatchCondition represents a condition which must
                          by fulfilled for a request to be sent to a webhook.
                        properties:
                          expression:
                            description: |-
                              Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.
                              CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:

                              'object' - The object from the incoming request. The value is null for DELETE requests.
                              'oldObject' - The existing object. The value is null for CREATE requests.
                              'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).
                              'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
                                See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
                              'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
                                request resource.
                              Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/

                              Required.
                            type: string
                          name:
                            description: |-
                              Name is an identifier for this match condition, used for strategic merging of MatchConditions,
                              as well as providing an identifier for logging purposes. A good name should be descriptive of
                              the associated expression.
                              Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and
                              must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or
                              '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an
                              optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')

                              Required.
                            type: string
                        required:
                        - expression
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    matchPolicy:
                      description: |-
                        matchPolicy defines how the "rules" list is used to match incoming requests.
                        Allowed values are "Exact" or "Equivalent".

                        - Exact: match a request only if it exactly matches a specified rule.
                        For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                        but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
                        a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.

                        - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version.
                        For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                        and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
                        a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.

                        Defaults to "Equivalent"
                      type: string
                    name:
                      description: |-
                        The name of the admission webhook.
                        Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where
                        "imagepolicy" is the name of the webhook, and kubernetes.io is the name
                        of the organization.
                        Required.
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector decides whether to run the webhook on an object based
                        on whether the namespace for that object matches the selector. If the
                        object itself is a namespace, the matching is performed on
                        object.metadata.labels. If the object is another cluster scoped resource,
                        it never skips the webhook.

                        For example, to run the webhook on any objects whose namespace is not
                        associated with "runlevel" of "0" or "1";  you will set the selector as
                        follows:
                        "namespaceSelector": {
                          "matchExpressions": [
                            {
                              "key": "runlevel",
                              "operator": "NotIn",
                              "values": [
                                "0",
                                "1"
                              ]
                            }
                          ]
                        }

                        If instead you want to only run the webhook on any objects whose
                        namespace is associated with the "environment" of "prod" or "staging";
                        you will set the selector as follows:
                        "namespaceSelector": {
                          "matchExpressions": [
                            {
                              "key": "environment",
                              "operator": "In",
                              "values": [
                                "prod",
                                "staging"
                              ]
                            }
                          ]
                        }

                        See
                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                        for more examples of label selectors.

                        Default to the empty LabelSelector, which matches everything.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    objectSelector:
                      description: |-
                        ObjectSelector decides whether to run the webhook based on if the
                        object has matching labels. objectSelector is evaluated against both
                        the oldObject and newObject that would be sent to the webhook, and
                        is considered to match if either object matches the selector. A null
                        object (oldObject in the case of create, or newObject in the case of
                        delete) or an object that cannot have labels (like a
                        DeploymentRollback or a PodProxyOptions object) is not considered to
                        match.
                        Use the object selector only if the webhook is opt-in, because end
                        users may skip the admission webhook by setting the labels.
                        Default to the empty LabelSelector, which matches everything.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    reinvocationPolicy:
                      description: |-
                        reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation.
                        Allowed values are "Never" and "IfNeeded".

                        Never: the webhook will not be called more than once in a single admission evaluation.

                        IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation
                        if the object being admitted is modified by other admission plugins after the initial webhook call.
                        Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted.
                        Note:
                        * the number of additional invocations is not guaranteed to be exactly one.
                        * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again.
                        * webhooks that use this option may be reordered to minimize the number of additional invocations.
                        * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.

                        Defaults to "Never".
                      type: string
                    rules:
                      description: |-
                        Rules describes what operations on what resources/subresources the webhook cares about.
                        The webhook cares about an operation if it matches _any_ Rule.
                        However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks
                        from putting the cluster in a state which cannot be recovered from without completely
                        disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called
                        on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
                      items:
                        description: |-
                          RuleWithOperations is a tuple of Operations and Resources. It is recommended to make
                          sure that all the tuple expansions are valid.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          apiVersions:
                            description: |-
                              APIVersions is the API versions the resources belong to. '*' is all versions.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          operations:
                            description: |-
                              Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or *
                              for all of those operations and any future admission operations that are added.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              description: OperationType specifies an operation for
                                a request.
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resources:
                            description: |-
                              Resources is a list of resources this rule applies to.

                              For example:
                              'pods' means pods.
                              'pods/log' means the log subresource of pods.
                              '*' means all resources, but not subresources.
                              'pods/*' means all subresources of pods.
                              '*/scale' means all scale subresources.
                              '*/*' means all resources and their subresources.

                              If wildcard is present, the validation rule will ensure resources do not
                              overlap with each other.

                              Depending on the enclosing object, subresources might not be allowed.
                              Required.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          scope:
                            description: |-
                              scope specifies the scope of this rule.
                              Valid values are "Cluster", "Namespaced", and "*"
                              "Cluster" means that only cluster-scoped resources will match this rule.
                              Namespace API objects are cluster-scoped.
                              "Namespaced" means that only namespaced resources will match this rule.
                              "*" means that there are no scope restrictions.
                              Subresources match the scope of their parent resource.
                              Default is "*".
                            type: string
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    sideEffects:
                      description: |-
                        SideEffects states whether this webhook has side effects.
                        Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown).
                        Webhooks with side effects MUST implement a reconciliation system, since a request may be
                        rejected by a future step in the admission chain and the side effects therefore need to be undone.
                        Requests with the dryRun attribute will be auto-rejected if they match a webhook with
                        sideEffects == Unknown or Some.
                      type: string
                    timeoutSeconds:
                      description: |-
                        TimeoutSeconds specifies the timeout for this webhook. After the timeout passes,
                        the webhook call will be ignored or the API call will fail based on the
                        failure policy.
                        The timeout value must be between 1 and 30 seconds.
                        Default to 10 seconds.
                      format: int32
                      type: integer
                  required:
                  - admissionReviewVersions
                  - clientConfig
                  - name
                  - sideEffects
                  type: object
                type: array
              name:
                description: Webhook Name
                minLength: 10
                type: string
              revision:
                default: "1"
                description: Webhook Revision Number
                type: string
              serviceAccount:
                description: Service Account
                properties:
                  automountServiceAccountToken:
                    description: Automount Service Account Token
                    type: boolean
                  imagePullSecrets:
                    description: Image Pull Secrets
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  secrets:
                    description: Secrets
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                type: object
              zitiControllerName:
                description: Controller CR Name
                type: string
            type: object
          status:
            description: ZitiWebhookStatus defines the observed state of ZitiWebhook
            properties:
              certificateConditions:
                description: Conditions is a list of conditions that describe the
                  ZitiWebhook Certificate Status
                items:
                  description: CertificateCondition contains condition information
                    for a Certificate.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the timestamp corresponding to the last status
                        change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        Message is a human readable description of the details of the last
                        transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: |-
                        If set, this represents the .metadata.generation that the condition was
                        set based upon.
                        For instance, if .metadata.generation is currently 12, but the
                        .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the Certificate.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason is a brief machine readable explanation for the condition's last
                        transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of the condition, known values are (`Ready`,
                        `Issuing`).
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions is a list of conditions that describe the
                  ZitiWebhook Status
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentConditions:
                description: Conditions is a list of conditions that describe the
                  ZitiWebhook Deployment Status
                items:
                  description: DeploymentCondition describes the state of a deployment
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of deployment condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              issuerConditions:
                description: Conditions is a list of conditions that describe the
                  ZitiWebhook Issuer Status
                items:
                  description: IssuerCondition contains condition information for
                    an Issuer.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the timestamp corresponding to the last status
                        change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        Message is a human readable description of the details of the last
                        transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: |-
                        If set, this represents the .metadata.generation that the condition was
                        set based upon.
                        For instance, if .metadata.generation is currently 12, but the
                        .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the Issuer.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason is a brief machine readable explanation for the condition's last
                        transition.
                      type: string
                    status:
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of the condition, known values are (`Ready`).
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
              replicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.deploymentSpec.replicas
        statusReplicasPath: .status.replicas
      status: {}
